---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  name: configs.bpfman.io
spec:
  group: bpfman.io
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .status.conditions[?(@.type=='Progressing')].status
      name: Progressing
      type: string
    - jsonPath: .status.conditions[?(@.type=='Available')].status
      name: Available
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Config holds the configuration for bpfman-operator.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec defines the desired state of the bpfman-operator.
            properties:
              agent:
                description: agent specifies the configuration for the bpfman agent
                  DaemonSet.
                properties:
                  healthProbePort:
                    description: |-
                      healthProbePort specifies the port on which the bpfman agent's health probe endpoint will listen.
                      If unspecified, the default port will be used.
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  image:
                    description: image specifies the container image for the bpfman
                      agent DaemonSet.
                    maxLength: 1023
                    minLength: 1
                    type: string
                  logLevel:
                    description: |-
                      logLevel specifies the verbosity of logs produced by the bpfman agent.
                      Valid values are: "info", "debug", "trace".
                    enum:
                    - info
                    - debug
                    - trace
                    maxLength: 256
                    minLength: 1
                    type: string
                type: object
              configuration:
                description: configuration specifies the content of bpfman.toml configuration
                  file used by the bpfman DaemonSet.
                maxLength: 65536
                minLength: 1
                type: string
              image:
                description: image specifies the container image for the bpfman DaemonSet.
                maxLength: 1023
                minLength: 1
                type: string
              logLevel:
                description: |-
                  logLevel specifies the log level for the bpfman DaemonSet via the RUST_LOG environment variable.
                  The RUST_LOG environment variable controls logging with the syntax: RUST_LOG=[target][=][level][,...].
                  For further information, see https://docs.rs/env_logger/latest/env_logger/.
                maxLength: 1024
                minLength: 1
                type: string
              namespace:
                description: |-
                  namespace specifies the namespace where bpfman-operator resources will be deployed.
                  If not specified, resources will be deployed in the default bpfman namespace.
                maxLength: 256
                minLength: 1
                type: string
            required:
            - agent
            type: object
          status:
            description: status reflects the observed state of the bpfman-operator.
            properties:
              components:
                additionalProperties:
                  description: ConfigComponentStatus holds the status of a single
                    Config component.
                  type: string
                description: |-
                  components represents the operational status of each individual bpfman-operator component such as the deployed
                  DaemonSets.
                type: object
              conditions:
                description: conditions represents the current state conditions of
                  the bpfman-operator and its components.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 1023
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
