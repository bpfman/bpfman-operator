apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  creationTimestamp: null
  name: clusterbpfapplicationstates.bpfman.io
spec:
  group: bpfman.io
  names:
    kind: ClusterBpfApplicationState
    listKind: ClusterBpfApplicationStateList
    plural: clusterbpfapplicationstates
    singular: clusterbpfapplicationstate
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.node
      name: Node
      type: string
    - jsonPath: .status.conditions[0].reason
      name: Status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ClusterBpfApplicationState contains the state of a ClusterBpfApplication
          instance for a given Kubernetes node. When a user creates a
          ClusterBpfApplication instance, bpfman creates a ClusterBpfApplicationState
          instance for each node in a Kubernetes cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          status:
            description: |-
              status reflects the status of a ClusterBpfApplication instance for the given
              node. appLoadStatus and conditions provide an overall status for the given
              node, while each item in the programs list provides a per eBPF program
              status for the given node.
            properties:
              appLoadStatus:
                description: |-
                  appLoadStatus reflects the status of loading the eBPF application on the
                  given node.


                  NotLoaded is a temporary state that is assigned when a
                  ClusterBpfApplicationState is created and the initial reconcile is being
                  processed.


                  LoadSuccess is returned if all the programs have been loaded with no errors.


                  LoadError is returned if one or more programs encountered an error and were
                  not loaded.


                  NotSelected is returned if this application did not select to run on this
                  Kubernetes node.


                  UnloadSuccess is returned when all the programs were successfully unloaded.


                  UnloadError is returned if one or more programs encountered an error when
                  being unloaded.
                type: string
              conditions:
                description: |-
                  conditions contains the summary state of the ClusterBpfApplication for the
                  given Kubernetes node. If one or more programs failed to load or attach to
                  the designated attachment point, the condition will report the error. If
                  more than one error has occurred, condition will contain the first error
                  encountered.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              node:
                description: node is the name of the Kubernetes node for this ClusterBpfApplicationState.
                type: string
              programs:
                description: |-
                  programs is a list of eBPF programs contained in the parent
                  ClusterBpfApplication instance. Each entry in the list contains the derived
                  program attributes as well as the attach status for each program on the
                  given Kubernetes node.
                items:
                  properties:
                    fentry:
                      description: |-
                        fentry contains the attachment data for an FEntry program when type is set
                        to FEntry.
                      properties:
                        function:
                          description: |-
                            function is a required field and specifies the name of the Linux kernel
                            function to attach the FEntry program. function must not be an empty string,
                            must not exceed 64 characters in length, must start with alpha characters
                            and must only contain alphanumeric characters.
                          maxLength: 64
                          minLength: 1
                          pattern: ^[a-zA-Z][a-zA-Z0-9_]+.
                          type: string
                        links:
                          description: |-
                            links is a list of attachment points for the FEntry program. Each entry in
                            the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          maxItems: 1
                          type: array
                      required:
                      - function
                      type: object
                    fexit:
                      description: |-
                        fexit contains the attachment data for an FExit program when type is set to
                        FExit.
                      properties:
                        function:
                          description: |-
                            function is a required field and specifies the name of the Linux kernel
                            function to attach the FExit program. function must not be an empty string,
                            must not exceed 64 characters in length, must start with alpha characters
                            and must only contain alphanumeric characters.
                          maxLength: 64
                          minLength: 1
                          pattern: ^[a-zA-Z][a-zA-Z0-9_]+.
                          type: string
                        links:
                          description: |-
                            links is a list of attachment points for the FExit program. Each entry in
                            the list includes a linkStatus, which indicates if the attachment was
                            successful or not, a linkId, which is the kernel ID for the link if
                            successfully attached, and other attachment specific data.
                          items:
                            properties:
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          maxItems: 1
                          type: array
                      required:
                      - function
                      type: object
                    kprobe:
                      description: |-
                        kprobe contains the attachment data for a KProbe program when type is set to
                        KProbe.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the KProbe program. Each entry in
                            the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              function:
                                description: |-
                                  function is the provisioned name of the Linux kernel function the KProbe
                                  program should be attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              offset:
                                default: 0
                                description: |-
                                  offset is the provisioned offset, whose value is added to the address of the
                                  attachment point function.
                                format: int64
                                type: integer
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - function
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    kretprobe:
                      description: |-
                        kretprobe contains the attachment data for a KRetProbe program when type is
                        set to KRetProbe.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the KRetProbe program. Each entry
                            in the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              function:
                                description: |-
                                  function is the provisioned name of the Linux kernel function the KRetProbe
                                  program should be attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - function
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    name:
                      description: |-
                        name is the name of the function that is the entry point for the eBPF
                        program
                      type: string
                    programId:
                      description: |-
                        programId is the id of the program in the kernel.  Not set until the
                        program is loaded.
                      format: int32
                      type: integer
                    programLinkStatus:
                      description: |-
                        programLinkStatus reflects whether all links requested for the program
                        are in the correct state.
                      type: string
                    tc:
                      description: tc contains the attachment data for a TC program
                        when type is set to TC.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the TC program. Each entry in the
                            list includes a linkStatus, which indicates if the attachment was successful
                            or not on this node, a linkId, which is the kernel ID for the link if
                            successfully attached, and other attachment specific data.
                          items:
                            properties:
                              direction:
                                description: |-
                                  direction is the provisioned direction of traffic, Ingress or Egress, the TC
                                  program should be attached for a given network device.
                                enum:
                                - Ingress
                                - Egress
                                type: string
                              interfaceName:
                                description: |-
                                  interfaceName is the name of the interface the TC program should be
                                  attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              netnsPath:
                                description: |-
                                  netnsPath is the optional path to the network namespace inside of which the
                                  TC program should be attached.
                                type: string
                              priority:
                                description: |-
                                  priority is the provisioned priority of the TC program in relation to other
                                  programs of the same type with the same attach point. It is a value from 0
                                  to 1000, where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              proceedOn:
                                description: |-
                                  proceedOn is the provisioned list of proceedOn values. proceedOn allows the
                                  user to call other TC programs in a chain, or not call the next program in a
                                  chain based on the exit code of a TC program .Multiple values are supported.
                                items:
                                  enum:
                                  - UnSpec
                                  - OK
                                  - ReClassify
                                  - Shot
                                  - Pipe
                                  - Stolen
                                  - Queued
                                  - Repeat
                                  - ReDirect
                                  - Trap
                                  - DispatcherReturn
                                  type: string
                                type: array
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - direction
                            - interfaceName
                            - linkStatus
                            - proceedOn
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    tcx:
                      description: tcx contains the attachment data for a TCX program
                        when type is set to TCX.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the TCX program. Each entry in the
                            list includes a linkStatus, which indicates if the attachment was successful
                            or not on this node, a linkId, which is the kernel ID for the link if
                            successfully attached, and other attachment specific data.
                          items:
                            properties:
                              direction:
                                description: |-
                                  direction is the provisioned direction of traffic, Ingress or Egress, the TC
                                  program should be attached for a given network device.
                                enum:
                                - Ingress
                                - Egress
                                type: string
                              interfaceName:
                                description: |-
                                  interfaceName is the name of the interface the TCX program should be
                                  attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              netnsPath:
                                description: |-
                                  netnsPath is the optional path to the network namespace inside of which the
                                  TCX program should be attached.
                                type: string
                              priority:
                                description: |-
                                  priority is the provisioned priority of the TCX program in relation to other
                                  programs of the same type with the same attach point. It is a value from 0
                                  to 1000, where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - direction
                            - interfaceName
                            - linkStatus
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    tracepoint:
                      description: |-
                        tracepoint contains the attachment data for a Tracepoint program when type
                        is set to Tracepoint.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the Tracepoint program. Each entry
                            in the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              name:
                                description: |-
                                  The name of a kernel tracepoint to attach the bpf program to.
                                  name is the provisioned name of the Linux kernel tracepoint function the
                                  Tracepoint program should be attached.
                                type: string
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - linkStatus
                            - name
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                    type:
                      description: |-
                        type specifies the provisioned eBPF program type for this program entry.
                        Type will be one of:
                          FEntry, FExit, KProbe, KRetProbe, TC, TCX, Tracepoint, UProbe,
                          URetProbe, XDP


                        When set to FEntry, the fentry object will be populated with the eBPF
                        program data associated with an FEntry program.


                        When set to FExit, the fexit object will be populated with the eBPF program
                        data associated with an FExit program.


                        When set to KProbe, the kprobe object will be populated with the eBPF
                        program data associated with a KProbe program.


                        When set to KRetProbe, the kretprobe object will be populated with the
                        eBPF program data associated with a KRetProbe program.


                        When set to TC, the tc object will be populated with the eBPF program data
                        associated with a TC program.


                        When set to TCX, the tcx object will be populated with the eBPF program
                        data associated with a TCX program.


                        When set to Tracepoint, the tracepoint object will be populated with the
                        eBPF program data associated with a Tracepoint program.


                        When set to UProbe, the uprobe object will be populated with the eBPF
                        program data associated with a UProbe program.


                        When set to URetProbe, the uretprobe object will be populated with the eBPF
                        program data associated with a URetProbe program.


                        When set to XDP, the xdp object will be populated with the eBPF program data
                        associated with a URetProbe program.
                      enum:
                      - FEntry
                      - FExit
                      - KProbe
                      - KRetProbe
                      - TC
                      - TCX
                      - TracePoint
                      - UProbe
                      - URetProbe
                      - XDP
                      type: string
                    uprobe:
                      description: |-
                        uprobe contains the attachment data for a UProbe program when type is set to
                        UProbe.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the UProbe program. Each entry in
                            the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              containerPid:
                                description: |-
                                  If containers is provisioned in the ClusterBpfApplication instance,
                                  containerPid is the derived PID of the container the UProbe or URetProbe this
                                  attachment point is attached.
                                format: int32
                                type: integer
                              function:
                                description: |-
                                  function is the provisioned name of the user-space function the UProbe
                                  program should be attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              offset:
                                default: 0
                                description: |-
                                  offset is the provisioned offset, whose value is added to the address of the
                                  attachment point function.
                                format: int64
                                type: integer
                              pid:
                                description: |-
                                  pid is the provisioned pid. If set, pid limits the execution of the UProbe
                                  or URetProbe to the provided process identification number (PID). If pid is
                                  not provided, the UProbe or URetProbe executes for all PIDs.
                                format: int32
                                type: integer
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              target:
                                description: |-
                                  target is the provisioned user-space library name or the absolute path to a
                                  binary or library.
                                type: string
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - linkStatus
                            - shouldAttach
                            - target
                            - uuid
                            type: object
                          type: array
                      type: object
                    uretprobe:
                      description: |-
                        uretprobe contains the attachment data for a URetProbe program when type is
                        set to URetProbe.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the UProbe program. Each entry in
                            the list includes a linkStatus, which indicates if the attachment was
                            successful or not on this node, a linkId, which is the kernel ID for the
                            link if successfully attached, and other attachment specific data.
                          items:
                            properties:
                              containerPid:
                                description: |-
                                  If containers is provisioned in the ClusterBpfApplication instance,
                                  containerPid is the derived PID of the container the UProbe or URetProbe this
                                  attachment point is attached.
                                format: int32
                                type: integer
                              function:
                                description: |-
                                  function is the provisioned name of the user-space function the UProbe
                                  program should be attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              offset:
                                default: 0
                                description: |-
                                  offset is the provisioned offset, whose value is added to the address of the
                                  attachment point function.
                                format: int64
                                type: integer
                              pid:
                                description: |-
                                  pid is the provisioned pid. If set, pid limits the execution of the UProbe
                                  or URetProbe to the provided process identification number (PID). If pid is
                                  not provided, the UProbe or URetProbe executes for all PIDs.
                                format: int32
                                type: integer
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              target:
                                description: |-
                                  target is the provisioned user-space library name or the absolute path to a
                                  binary or library.
                                type: string
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - linkStatus
                            - shouldAttach
                            - target
                            - uuid
                            type: object
                          type: array
                      type: object
                    xdp:
                      description: xdp contains the attachment data for an XDP program
                        when type is set to XDP.
                      properties:
                        links:
                          description: |-
                            links is a list of attachment points for the XDP program. Each entry in the
                            list includes a linkStatus, which indicates if the attachment was successful
                            or not on this node, a linkId, which is the kernel ID for the link if
                            successfully attached, and other attachment specific data.
                          items:
                            properties:
                              interfaceName:
                                description: |-
                                  interfaceName is the name of the interface the XDP program should be
                                  attached.
                                type: string
                              linkId:
                                description: |-
                                  linkId is an identifier for the link assigned by bpfman. This field is
                                  empty until the program is successfully attached and bpfman returns the
                                  id.
                                format: int32
                                type: integer
                              linkStatus:
                                description: |-
                                  linkStatus reflects whether the attachment has been reconciled
                                  successfully, and if not, why.
                                type: string
                              netnsPath:
                                description: |-
                                  netnsPath is the optional path to the network namespace inside of which the
                                  XDP program should be attached.
                                type: string
                              priority:
                                description: |-
                                  priority is the provisioned priority of the XDP program in relation to other
                                  programs of the same type with the same attach point. It is a value from 0
                                  to 1000, where lower values have higher precedence.
                                format: int32
                                maximum: 1000
                                minimum: 0
                                type: integer
                              proceedOn:
                                description: |-
                                  proceedOn is the provisioned list of proceedOn values. proceedOn allows the
                                  user to call other TC programs in a chain, or not call the next program in a
                                  chain based on the exit code of a TC program .Multiple values are supported.
                                items:
                                  enum:
                                  - Aborted
                                  - Drop
                                  - Pass
                                  - TX
                                  - ReDirect
                                  - DispatcherReturn
                                  type: string
                                type: array
                              shouldAttach:
                                description: shouldAttach reflects whether the attachment
                                  should exist.
                                type: boolean
                              uuid:
                                description: uuid is an Unique identifier for the
                                  attach point assigned by bpfman agent.
                                type: string
                            required:
                            - interfaceName
                            - linkStatus
                            - proceedOn
                            - shouldAttach
                            - uuid
                            type: object
                          type: array
                      type: object
                  required:
                  - name
                  - programLinkStatus
                  - type
                  type: object
                  x-kubernetes-validations:
                  - message: xdp configuration is required when type is xdp, and forbidden
                      otherwise
                    rule: 'has(self.type) && self.type == ''XDP'' ?  has(self.xdp)
                      : !has(self.xdp)'
                  - message: tc configuration is required when type is tc, and forbidden
                      otherwise
                    rule: 'has(self.type) && self.type == ''TC'' ?  has(self.tc) :
                      !has(self.tc)'
                  - message: tcx configuration is required when type is tcx, and forbidden
                      otherwise
                    rule: 'has(self.type) && self.type == ''TCX'' ?  has(self.tcx)
                      : !has(self.tcx)'
                  - message: fentry configuration is required when type is fentry,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''FEntry'' ?  has(self.fentry)
                      : !has(self.fentry)'
                  - message: fexit configuration is required when type is fexit, and
                      forbidden otherwise
                    rule: 'has(self.type) && self.type == ''FExit'' ?  has(self.fexit)
                      : !has(self.fexit)'
                  - message: kprobe configuration is required when type is kprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''KProbe'' ?  has(self.kprobe)
                      : !has(self.kprobe)'
                  - message: kretprobe configuration is required when type is kretprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''KRetProbe'' ?  has(self.kretprobe)
                      : !has(self.kretprobe)'
                  - message: uprobe configuration is required when type is uprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''UProbe'' ?  has(self.uprobe)
                      : !has(self.uprobe)'
                  - message: uretprobe configuration is required when type is uretprobe,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''URetProbe'' ?  has(self.uretprobe)
                      : !has(self.uretprobe)'
                  - message: tracepoint configuration is required when type is tracepoint,
                      and forbidden otherwise
                    rule: 'has(self.type) && self.type == ''TracePoint'' ?  has(self.tracepoint)
                      : !has(self.tracepoint)'
                type: array
              updateCount:
                description: |-
                  UpdateCount tracks the number of times the BpfApplicationState object has
                  been updated. The bpfman agent initializes it to 1 when it creates the
                  object, and then increments it before each subsequent update. It serves
                  as a lightweight sequence number to verify that the API server is serving
                  the most recent version of the object before beginning a new Reconcile
                  operation.
                format: int64
                type: integer
            required:
            - appLoadStatus
            - node
            - updateCount
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
